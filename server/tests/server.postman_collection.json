{
	"info": {
		"_postman_id": "671c77e5-5d5d-4f38-a946-70feaea08ab7",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a user (Gustav)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ce379939-bf3b-4b12-a6e4-ec5d418de812",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "da5fca2e-1b73-4926-bd1e-223fbc129de3",
						"exec": [
							"var jsonData = pm.response.json();",
							"var userId = jsonData._id;",
							"pm.environment.set(\"user_id\", userId);",
							"",
							"pm.test(\"Correct status code\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Correct user response\", function () {",
							"     pm.expect(jsonData.username).to.eql(\"gustav\");",
							"    pm.expect(jsonData.level).to.eql(1);",
							"    pm.expect(jsonData.title).to.eql(\"This is a title\");",
							"    pm.expect(jsonData.experiencePoints).to.eql(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"gustav\",\n    \"level\": 1,\n    \"title\": \"This is a title\",\n    \"experiencePoints\": \"1\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post achievement to user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91e40628-a668-4bae-9ee4-07c5e8ffaf45",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var achievementIdforUser = jsonData._id;\r",
							"pm.environment.set(\"achievement_id_forUser\", achievementIdforUser);\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"Chores\",\r\n    \"name\": \"Get to level 10\",\r\n    \"degree\": \"Gold\",\r\n    \"description\": \"You must get to level 10 within a week\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}/achievements",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}",
						"achievements"
					],
					"variable": [
						{
							"id": "47a2ecd8-a36f-4f86-b14d-a774a1dd7c5a",
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post budget to user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b11f9908-fbc0-448c-8ccf-b00d0f7106b5",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var budgetIdforUser = jsonData._id;\r",
							"pm.environment.set(\"budget_id_forUser\", budgetIdforUser);\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"I like money wooohooooo!!\",\r\n    \"income\": 400,\r\n    \"expenses\": 50,\r\n    \"savings\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}/budgets",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}",
						"budgets"
					],
					"variable": [
						{
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post category to user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b5255e3-eb52-4eaa-a446-15184e8164aa",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var categoryIdforUser = jsonData._id;\r",
							"pm.environment.set(\"category_id_forUser\", categoryIdforUser);\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"categoryType\": {\r\n        \"typeName\": \"Fitness\",\r\n        \"task\": \"Increase fitness level to very high levels\",\r\n        \"level\": \"1\",\r\n        \"typeExperience\": \"0\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}/categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}",
						"categories"
					],
					"variable": [
						{
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get allllll achievements of a user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b23c5679-83cf-420c-aa13-23c0d87a2242",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}/achievements",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}",
						"achievements"
					],
					"variable": [
						{
							"id": "105cf296-94c5-41ac-afb6-68fc62aee9ee",
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get specific achievement of a user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ca08804-0b09-428f-a8e4-2f3961920f1f",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}/achievements/:{{achievement_id_forUser}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}",
						"achievements",
						":{{achievement_id_forUser}}"
					],
					"variable": [
						{
							"id": "d9731442-5b96-4349-9a77-91298af950a1",
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						},
						{
							"id": "fbdf483c-081c-4d1e-b53b-4888e5a295f6",
							"key": "{{achievement_id_forUser}}",
							"value": "{{achievement_id_forUser}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a specific achievement of a specific user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d7b009a-1a92-4001-9eb5-41b035485875",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}/achievements/:{{achievement_id_forUser}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}",
						"achievements",
						":{{achievement_id_forUser}}"
					],
					"variable": [
						{
							"id": "d0b7b5fd-07c4-4f87-93ca-2429d88866f4",
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						},
						{
							"id": "c5bac2c4-fd32-4e3a-ba99-e4a45d48961e",
							"key": "{{achievement_id_forUser}}",
							"value": "{{achievement_id_forUser}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create another user (Altug)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "52e8a1f8-b85f-4038-a950-8a8963c286d9",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f43a782c-56f2-48c6-b978-a8bcfaf61d78",
						"exec": [
							"var jsonData = pm.response.json();",
							"var userId2 = jsonData._id;",
							"pm.environment.set(\"user_id2\", userId2);",
							"",
							"pm.test(\"Correct status code\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Correct user response\", function () {",
							"     pm.expect(jsonData.username).to.eql(\"altug\");",
							"    pm.expect(jsonData.level).to.eql(2);",
							"    pm.expect(jsonData.title).to.eql(\"This is another title\");",
							"    pm.expect(jsonData.experiencePoints).to.eql(3);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"altug\",\n    \"level\": 2,\n    \"title\": \"This is another title\",\n    \"experiencePoints\": \"3\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users (Gustav and Altug)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8f06ab0b-6783-414c-938c-afdaadc1f992",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user by id before delete (Gustav)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a29d4cba-f58f-4b24-bc7f-f78066651475",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct user response\", function () {\r",
							"     pm.expect(jsonData.username).to.eql(\"gustav\");\r",
							"    pm.expect(jsonData.level).to.eql(1);\r",
							"    pm.expect(jsonData.title).to.eql(\"This is a title\");\r",
							"    pm.expect(jsonData.experiencePoints).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "applciation/json"
					}
				],
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}"
					],
					"query": [
						{
							"key": "id",
							"value": "{{user_id}}",
							"disabled": true
						}
					],
					"variable": [
						{
							"id": "bac9ebd5-ee7c-4bf2-9656-dfdc2e3eb3ff",
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one user (Gustav)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9948128-2e36-456e-ba01-0e2e6260e2b9",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}"
					],
					"variable": [
						{
							"id": "04a6f3a8-a00f-4a85-a1a3-164828dd57d0",
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user by id after deleting (Gustav)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea6e681c-dfb7-4f02-8403-c619399d1a2b",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "applciation/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/users/:{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id}}"
					],
					"variable": [
						{
							"id": "402f5c72-5b3f-4eb3-88c4-789b2d54f378",
							"key": "{{user_id}}",
							"value": "{{user_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users after deleting one (Altug)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3378a8d0-b508-4b72-b664-ce84350cf049",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var username = jsonData.username;\r",
							"var level = jsonData.level;\r",
							"var title = jsonData.title;\r",
							"var experiencePoints = jsonData.experiencePoints;\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct user response\", function () {\r",
							"    pm.expect(jsonData.username).to.eql(username);\r",
							"    pm.expect(jsonData.level).to.eql(level);\r",
							"    pm.expect(jsonData.title).to.eql(title);\r",
							"    pm.expect(jsonData.experiencePoints).to.eql(experiencePoints);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/users/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch a user with id (Altug to Filip)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3146eb3c-4516-4fdb-859f-e5fb790a621e",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct user response\", function () {\r",
							"     pm.expect(jsonData.username).to.eql(\"filip\");\r",
							"    pm.expect(jsonData.level).to.eql(2);\r",
							"    pm.expect(jsonData.title).to.eql(\"changed title\");\r",
							"    pm.expect(jsonData.experiencePoints).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"filip\",\r\n    \"title\": \"changed title\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/:{{user_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id2}}"
					],
					"variable": [
						{
							"id": "531debe0-60ab-4349-8c19-575266ea253e",
							"key": "{{user_id2}}",
							"value": "{{user_id2}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Put a user with id (Filip to Gustav v2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a251b11-a4d2-4bf5-b24b-3fe146ff1a0b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct user response\", function () {\r",
							"     pm.expect(jsonData.username).to.eql(\"gustav v2\");\r",
							"    pm.expect(jsonData.level).to.eql(100);\r",
							"    pm.expect(jsonData.title).to.eql(\"Put works!\");\r",
							"    pm.expect(jsonData.experiencePoints).to.eql(123);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"gustav v2\",\r\n    \"level\": 100,\r\n    \"title\": \"Put works!\",\r\n    \"experiencePoints\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/:{{user_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						":{{user_id2}}"
					],
					"variable": [
						{
							"id": "62e58e60-1c8f-46a1-b3cb-3270b9f77f23",
							"key": "{{user_id2}}",
							"value": "{{user_id2}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the users collection",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "612ef9f1-d50d-4071-b225-ba1b1b3c8fed",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an achievement (Get to level 10 in Fitness)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9399957d-18d6-4eef-9297-fc472122b0f7",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8ca1909d-9cf8-4c3d-86cb-8001dd5651ed",
						"exec": [
							"var jsonData = pm.response.json();",
							"var achievementId = jsonData._id;",
							"pm.environment.set(\"achievement_id\", achievementId);",
							"",
							"pm.test(\"Correct status code\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Correct achievement response\", function () {",
							"    pm.expect(jsonData.type).to.eql(\"Fitness\");",
							"    pm.expect(jsonData.name).to.eql(\"Get to level 10\");",
							"    pm.expect(jsonData.degree).to.eql(\"Silver\");",
							"    pm.expect(jsonData.experiencePoints).to.eql(20);",
							"    pm.expect(jsonData.description).to.eql(\"You must get to level 10 within a week\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\": \"Fitness\",\n    \"name\": \"Get to level 10\",\n    \"degree\": \"Silver\",\n    \"description\": \"You must get to level 10 within a week\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/achievements",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create another achievement (Get to level 5 in Chores)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "092aee6e-3cf7-4124-ae1f-60d4dcbd40a4",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "349ef551-2ba8-498e-98dd-b9821b9e5cc4",
						"exec": [
							"var jsonData = pm.response.json();",
							"var achievementId2 = jsonData._id;",
							"pm.environment.set(\"achievement_id2\", achievementId2);",
							"",
							"pm.test(\"Correct status code\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Correct achievement response\", function () {",
							"    pm.expect(jsonData.type).to.eql(\"Chores\");",
							"    pm.expect(jsonData.name).to.eql(\"Get to level 5\");",
							"    pm.expect(jsonData.degree).to.eql(\"Gold\");",
							"    pm.expect(jsonData.experiencePoints).to.eql(30);",
							"    pm.expect(jsonData.description).to.eql(\"You must get to level 5 within a week\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\": \"Chores\",\n    \"name\": \"Get to level 5\",\n    \"degree\": \"Gold\",\n    \"description\": \"You must get to level 5 within a week\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/achievements",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all achievements (Fitness and Chores)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa3f7cd6-dd9b-4d24-acb6-1ccdf8d14ea4",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/api/achievements",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get sort desc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7a4367b9-0203-4531-a0fc-7255144212f7",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/achievements/?sort=desc",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements",
						""
					],
					"query": [
						{
							"key": "sort",
							"value": "desc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get achievement by id before delete (Fitness)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0aea7eb5-e647-45a0-a7c4-17cffcff7a44",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct achievement response\", function () {\r",
							"    pm.expect(jsonData.type).to.eql(\"Fitness\");\r",
							"    pm.expect(jsonData.name).to.eql(\"Get to level 10\");\r",
							"    pm.expect(jsonData.degree).to.eql(\"Silver\");\r",
							"    pm.expect(jsonData.experiencePoints).to.eql(20);\r",
							"    pm.expect(jsonData.description).to.eql(\"You must get to level 10 within a week\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "applciation/json"
					}
				],
				"url": {
					"raw": "{{host}}/api/achievements/:{{achievement_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements",
						":{{achievement_id}}"
					],
					"variable": [
						{
							"id": "9bb5c08f-a0b5-4349-b4fa-a040aae10b1a",
							"key": "{{achievement_id}}",
							"value": "{{achievement_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one achievement (Fitness)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f022792-6463-4ac0-9b8e-b0759a339cdf",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/achievements/:{{achievement_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements",
						":{{achievement_id}}"
					],
					"variable": [
						{
							"id": "cc25610d-bae4-4f26-b77c-d72dff8a8eb8",
							"key": "{{achievement_id}}",
							"value": "{{achievement_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get achievement by id after deleting (Fitness)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ccc9d3ef-4109-44a8-b06e-3bc865c70650",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "applciation/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/achievements/:{{achievement_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements",
						":{{achievement_id}}"
					],
					"variable": [
						{
							"id": "17fd6912-20b7-4288-a730-0d772851e78c",
							"key": "{{achievement_id}}",
							"value": "{{achievement_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all achievements after deleting one (Chores)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63b1a082-5bb3-48bb-ba6c-58efa89f5091",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var username = jsonData.username;\r",
							"var level = jsonData.level;\r",
							"var title = jsonData.title;\r",
							"var experiencePoints = jsonData.experiencePoints;\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct user response\", function () {\r",
							"    pm.expect(jsonData.username).to.eql(username);\r",
							"    pm.expect(jsonData.level).to.eql(level);\r",
							"    pm.expect(jsonData.title).to.eql(title);\r",
							"    pm.expect(jsonData.experiencePoints).to.eql(experiencePoints);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/achievements/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch an achievement with id (Chores to Studies (silver to gold))",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1109d697-1123-4fad-98bf-f849bbf3b12f",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct achievement response\", function () {\r",
							"    pm.expect(jsonData.type).to.eql(\"Studies\");\r",
							"    pm.expect(jsonData.name).to.eql(\"Get to level 5\");\r",
							"    pm.expect(jsonData.degree).to.eql(\"Gold\");\r",
							"    pm.expect(jsonData.experiencePoints).to.eql(30);\r",
							"    pm.expect(jsonData.description).to.eql(\"You must get to level 5 within a week\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"Studies\",\r\n    \"degree\": \"Gold\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/achievements/:{{achievement_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements",
						":{{achievement_id2}}"
					],
					"variable": [
						{
							"id": "9eb8f51d-ad41-46c5-a941-3b32b3dd8bf2",
							"key": "{{achievement_id2}}",
							"value": "{{achievement_id2}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Put an achievement with id (Studies to Fitness)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60595414-1d2d-422d-af34-0981315af5cc",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct achievement response\", function () {\r",
							"    pm.expect(jsonData.type).to.eql(\"Chores\");\r",
							"    pm.expect(jsonData.name).to.eql(\"Get to level 5\");\r",
							"    pm.expect(jsonData.degree).to.eql(\"Silver\");\r",
							"    pm.expect(jsonData.experiencePoints).to.eql(20);\r",
							"    pm.expect(jsonData.description).to.eql(\"You must get to level 5 within a week\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"type\": \"Chores\",\r\n    \"name\": \"Get to level 5\",\r\n    \"degree\": \"Silver\",\r\n    \"description\": \"You must get to level 5 within a week\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/achievements/:{{achievement_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements",
						":{{achievement_id2}}"
					],
					"variable": [
						{
							"id": "787ed0be-c3d3-4e01-9e88-bcdbf813d52f",
							"key": "{{achievement_id2}}",
							"value": "{{achievement_id2}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the achievements collection",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eaf70edd-9540-4e85-a81d-6747c6cd0adf",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/achievements",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"achievements"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a budget (I like money)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0e73d773-5fc7-405c-9be5-de042ae6374d",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "70303b51-786e-4ba0-8746-4e9d1786a56d",
						"exec": [
							"var jsonData = pm.response.json();",
							"var budgetId = jsonData._id;",
							"pm.environment.set(\"budget_id\", budgetId);",
							"",
							"pm.test(\"Correct status code\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Correct budget response\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"I like money\")",
							"    pm.expect(jsonData.income).to.eql(100);",
							"    pm.expect(jsonData.expenses).to.eql(20);",
							"    pm.expect(jsonData.savings).to.eql(10);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"I like money\",\n    \"income\": 100,\n    \"expenses\": 20,\n    \"savings\": 10\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/budgets",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create another budget (I like money more)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "759463b8-f07b-4965-8681-f19cccf8e9b8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ad947690-2e5c-4930-a359-aa2f480229d5",
						"exec": [
							"var jsonData = pm.response.json();",
							"var budgetId2 = jsonData._id;",
							"pm.environment.set(\"budget_id2\", budgetId2);",
							"",
							"pm.test(\"Correct status code\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Correct budget response\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"I like money more\")",
							"    pm.expect(jsonData.income).to.eql(1000);",
							"    pm.expect(jsonData.expenses).to.eql(200);",
							"    pm.expect(jsonData.savings).to.eql(100);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"I like money more\",\n    \"income\": 1000,\n    \"expenses\": 200,\n    \"savings\": 100\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/budgets",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all budgets (I like money and I like money more)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5bd359d2-d7ab-450c-8642-7c77ae311884",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/budgets",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get budget by id before delete (I like money)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6fb8e66c-eb31-4162-b9f5-4d01b171286d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct budget response\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"I like money\")\r",
							"    pm.expect(jsonData.income).to.eql(100);\r",
							"    pm.expect(jsonData.expenses).to.eql(20);\r",
							"    pm.expect(jsonData.savings).to.eql(10);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "applciation/json"
					}
				],
				"url": {
					"raw": "{{host}}/api/budgets/:{{budget_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets",
						":{{budget_id}}"
					],
					"variable": [
						{
							"id": "cf4acd19-8a0e-4477-a224-d0504e294107",
							"key": "{{budget_id}}",
							"value": "{{budget_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one budget (I like money)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d0450f9-9135-48c5-ad99-d286c3e66620",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/budgets/:{{budget_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets",
						":{{budget_id}}"
					],
					"variable": [
						{
							"id": "8d44ff29-ee97-4b8d-8c20-5febd253c69f",
							"key": "{{budget_id}}",
							"value": "{{budget_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get budget by id after deleting (I like money)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d82e9aef-3d17-47b6-bf6b-8d23ed01ee15",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "applciation/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/budgets/:{{budget_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets",
						":{{budget_id}}"
					],
					"variable": [
						{
							"id": "980e37fc-d395-457f-a36d-aa2bc264df24",
							"key": "{{budget_id}}",
							"value": "{{budget_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all budgets after deleting one (I like money more)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a852f59d-eb10-41c3-a0e9-ab11bf257cdc",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var name = jsonData.name;\r",
							"var income = jsonData.income;\r",
							"var expenses = jsonData.expenses;\r",
							"var savings = jsonData.savings;\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct user response\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(name);\r",
							"    pm.expect(jsonData.income).to.eql(income);\r",
							"    pm.expect(jsonData.expenses).to.eql(expenses);\r",
							"    pm.expect(jsonData.savings).to.eql(savings);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/budgets/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch a user with id (I like money more TO Wow money is nice)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff56b9fc-5649-4502-bdbd-f46d2ac44692",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct user response\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Wow money is nice\")\r",
							"    pm.expect(jsonData.income).to.eql(1000);\r",
							"    pm.expect(jsonData.expenses).to.eql(200);\r",
							"    pm.expect(jsonData.savings).to.eql(1234);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Wow money is nice\",\r\n    \"savings\": 1234\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/budgets/:{{budget_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets",
						":{{budget_id2}}"
					],
					"variable": [
						{
							"id": "7211ed78-98d3-47f5-8cd1-26047664dd85",
							"key": "{{budget_id2}}",
							"value": "{{budget_id2}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Put a budget with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "64f82179-8ca5-40af-96c1-50421ee150b2",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct user response\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Put works!\")\r",
							"    pm.expect(jsonData.income).to.eql(1002);\r",
							"    pm.expect(jsonData.expenses).to.eql(2440);\r",
							"    pm.expect(jsonData.savings).to.eql(101);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Put works!\",\r\n    \"income\": 1002,\r\n    \"expenses\": 2440,\r\n    \"savings\": 101\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/budgets/:{{budget_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets",
						":{{budget_id2}}"
					],
					"variable": [
						{
							"id": "6b6ac5ca-bdd6-40e2-847b-0daa812568d5",
							"key": "{{budget_id2}}",
							"value": "{{budget_id2}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the budgets collection",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b70680cf-31d1-453c-83bb-87e1ab7c04c5",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/budgets",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"budgets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a category (Fitness)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a74c9db4-6da6-4185-9e42-58a0f865386b",
						"exec": [
							"var jsonData = pm.response.json();",
							"var categoryId = jsonData._id;",
							"pm.environment.set(\"category_id\", categoryId);",
							"",
							"pm.test(\"Correct status code\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Correct category response\", function () {",
							"    pm.expect(jsonData.categoryType.typeName).to.eql(\"Fitness\");",
							"    pm.expect(jsonData.categoryType.task).to.eql(\"Increase fitness level\");",
							"    pm.expect(jsonData.categoryType.level).to.eql(1);",
							"    pm.expect(jsonData.categoryType.typeExperience).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "47f09835-96a3-439f-9fd4-3ad9af8b57ac",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryType\": {\n        \"typeName\": \"Fitness\",\n        \"task\": \"Increase fitness level\",\n        \"level\": \"1\",\n        \"typeExperience\": \"0\"\n    }\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create another category (Chores)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cd1fea15-c51c-4fa7-b3fb-abe5d220a355",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3137914e-3471-4f09-bdea-6fe2222e8b57",
						"exec": [
							"var jsonData = pm.response.json();",
							"var categoryId2 = jsonData._id;",
							"pm.environment.set(\"category_id2\", categoryId2);",
							"",
							"pm.test(\"Correct status code\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Correct category response\", function () {",
							"    pm.expect(jsonData.categoryType.typeName).to.eql(\"Chores\");",
							"    pm.expect(jsonData.categoryType.task).to.eql(\"Increase chore level\");",
							"    pm.expect(jsonData.categoryType.level).to.eql(1);",
							"    pm.expect(jsonData.categoryType.typeExperience).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryType\": {\n        \"typeName\": \"Chores\",\n        \"task\": \"Increase chore level\",\n        \"level\": \"1\",\n        \"typeExperience\": \"0\"\n    }\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all categories (Fitness and Chores)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d097f050-6063-4cd0-b8a2-f05c1b7ccaff",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get category by id before delete (Fitness)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b4348b19-462c-4226-a54e-569b6928de9e",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct category response\", function () {\r",
							"    pm.expect(jsonData.categoryType.typeName).to.eql(\"Fitness\");\r",
							"    pm.expect(jsonData.categoryType.task).to.eql(\"Increase fitness level\");\r",
							"    pm.expect(jsonData.categoryType.level).to.eql(1);\r",
							"    pm.expect(jsonData.categoryType.typeExperience).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "applciation/json"
					}
				],
				"url": {
					"raw": "{{host}}/api/categories/:{{category_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories",
						":{{category_id}}"
					],
					"variable": [
						{
							"id": "aad88dbd-8c4f-4904-9e18-e7966d3ade83",
							"key": "{{category_id}}",
							"value": "{{category_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one category (Fitness)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "837d582b-ee92-467a-9826-8b01f5c546dd",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/categories/:{{category_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories",
						":{{category_id}}"
					],
					"variable": [
						{
							"id": "caf992ef-dcfc-437e-b2c7-ac23cdf9ef64",
							"key": "{{category_id}}",
							"value": "{{category_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get category by id after deleting (Fitness)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8429cd69-1dc1-4083-9d5f-78d556a45ab4",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "applciation/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/categories/:{{category_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories",
						":{{category_id}}"
					],
					"variable": [
						{
							"id": "1601e9a2-e4b6-4c81-91ef-651578eb516c",
							"key": "{{category_id}}",
							"value": "{{category_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all budgets after deleting one (Chores)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "11c65653-8045-409d-a7d8-c5d0503a1205",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/api/categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch a category with id (Chores to Studies)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7cdb9cc5-ea4a-4266-96d1-97e9d8637382",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct category response\", function () {\r",
							"    pm.expect(jsonData.categoryType.typeName).to.eql(\"Studies\");\r",
							"    pm.expect(jsonData.categoryType.task).to.eql(\"Increase study level\");\r",
							"    pm.expect(jsonData.categoryType.level).to.eql(1);\r",
							"    pm.expect(jsonData.categoryType.typeExperience).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"categoryType\": {\r\n        \"typeName\": \"Studies\",\r\n        \"task\": \"Increase study level\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/categories/:{{category_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories",
						":{{category_id2}}"
					],
					"variable": [
						{
							"id": "f0956384-b975-4002-8356-5c8af81ffe00",
							"key": "{{category_id2}}",
							"value": "{{category_id2}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Put a category with id (Studies to Fitnessv2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5edecd3-5ca8-4e5e-9e0f-55024aafd373",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct category response\", function () {\r",
							"    pm.expect(jsonData.categoryType.typeName).to.eql(\"Fitnessv2\");\r",
							"    pm.expect(jsonData.categoryType.task).to.eql(\"Increase fitness level even more\");\r",
							"    pm.expect(jsonData.categoryType.level).to.eql(22);\r",
							"    pm.expect(jsonData.categoryType.typeExperience).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"categoryType\": {\r\n        \"typeName\": \"Fitnessv2\",\r\n        \"task\": \"Increase fitness level even more\",\r\n        \"level\": \"22\",\r\n        \"typeExperience\": \"0\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/categories/:{{category_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories",
						":{{category_id2}}"
					],
					"variable": [
						{
							"id": "423ce3f4-7dd2-432e-96e5-bc64edeea9ed",
							"key": "{{category_id2}}",
							"value": "{{category_id2}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the categories collection",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ce2d41c3-8196-49e0-8b2c-9cedd543a72c",
						"exec": [
							"pm.test(\"Correct status code\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}